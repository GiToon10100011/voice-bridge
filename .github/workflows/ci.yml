name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16, 18, 20]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Check code formatting
      run: npm run format:check
      
    - name: Run unit tests
      run: npm run test:unit
      
    - name: Run integration tests
      run: npm run test:integration
      
    - name: Run user acceptance tests
      run: npm run test:user-acceptance
      
    - name: Generate test coverage
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
    - name: Build extension
      run: npm run build
      
    - name: Validate build
      run: npm run validate:build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: extension-build-node-${{ matrix.node-version }}
        path: dist/
        retention-days: 7

  compatibility:
    name: Browser Compatibility Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run compatibility tests
      run: npm run test:compatibility
      
    - name: Build for Chrome
      run: npm run build
      
    - name: Build for Edge
      run: npm run build:edge
      
    - name: Upload Chrome build
      uses: actions/upload-artifact@v3
      with:
        name: chrome-extension
        path: dist/
        
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build extension
      run: npm run build
      
    - name: Run performance tests
      run: npm run test -- tests/performance/
      
    - name: Check bundle size
      run: |
        BUNDLE_SIZE=$(du -sb dist/ | cut -f1)
        echo "Bundle size: $BUNDLE_SIZE bytes"
        if [ $BUNDLE_SIZE -gt 5242880 ]; then
          echo "❌ Bundle size exceeds 5MB limit"
          exit 1
        else
          echo "✅ Bundle size is within limits"
        fi