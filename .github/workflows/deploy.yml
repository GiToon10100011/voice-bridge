name: Deploy Extension

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run all tests
      run: npm run test:all
      
    - name: Build extension
      run: npm run build:production
      
    - name: Validate build
      run: npm run validate:build
      
    - name: Create release package
      run: npm run package
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: extension-release
        path: |
          dist/
          *.zip

  deploy-chrome:
    name: Deploy to Chrome Web Store
    runs-on: ubuntu-latest
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build extension
      run: npm run build:production
      
    - name: Package extension
      run: npm run package
      
    - name: Upload to Chrome Web Store
      uses: mnao305/chrome-extension-upload@v4.0.1
      with:
        file-path: ./tts-voice-bridge-v${{ github.ref_name }}.zip
        extension-id: ${{ secrets.CHROME_EXTENSION_ID }}
        client-id: ${{ secrets.CHROME_CLIENT_ID }}
        client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
        refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
        publish: true
        
    - name: Notify deployment success
      run: |
        echo "✅ Chrome Web Store 배포 완료"
        echo "버전: ${{ github.ref_name }}"
        echo "확장프로그램 ID: ${{ secrets.CHROME_EXTENSION_ID }}"

  deploy-edge:
    name: Deploy to Edge Add-ons
    runs-on: ubuntu-latest
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for Edge
      run: npm run build:edge
      
    - name: Package Edge extension
      run: npm run package
      
    # Edge Add-ons 배포는 수동으로 진행
    - name: Prepare Edge package
      run: |
        echo "📦 Edge Add-ons 패키지 준비 완료"
        echo "수동으로 Microsoft Partner Center에 업로드하세요."
        echo "파일: tts-voice-bridge-v${{ github.ref_name }}.zip"

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [deploy-chrome, deploy-edge]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: extension-release
        
    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Generate changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          # Extract changelog for this version
          sed -n "/## \[v${{ steps.version.outputs.VERSION }}\]/,/## \[v/p" CHANGELOG.md | head -n -1 > release_notes.md
        else
          echo "## 변경사항" > release_notes.md
          echo "- 버전 ${{ steps.version.outputs.VERSION }} 릴리스" >> release_notes.md
        fi
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: TTS Voice Bridge v${{ steps.version.outputs.VERSION }}
        body_path: release_notes.md
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tts-voice-bridge-v${{ steps.version.outputs.VERSION }}.zip
        asset_name: tts-voice-bridge-v${{ steps.version.outputs.VERSION }}.zip
        asset_content_type: application/zip

  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: [create-release]
    if: always()
    
    steps:
    - name: Notify success
      if: needs.create-release.result == 'success'
      run: |
        echo "🎉 TTS Voice Bridge 배포 완료!"
        echo "버전: ${{ github.ref_name }}"
        echo "Chrome Web Store: 자동 배포됨"
        echo "Edge Add-ons: 수동 배포 필요"
        echo "GitHub Release: 생성됨"
        
    - name: Notify failure
      if: failure()
      run: |
        echo "❌ 배포 실패"
        echo "로그를 확인하여 문제를 해결해주세요."